import type { HookFetcher } from "../commerce/utils/types";
import type { SwrOptions } from "../commerce/utils/use-data";
import type { AddressesResponse } from "../api/address";
export type { AddressesResponse };
export declare type UseAddressesInput = {
    page?: number;
};
export declare type UseAddressesPayload = UseAddressesInput & {
    customerId?: number;
};
export declare const fetcher: HookFetcher<AddressesResponse | null, UseAddressesPayload>;
export declare function extendHook(customFetcher: typeof fetcher, swrOptions?: SwrOptions<AddressesResponse | null, UseAddressesPayload>): {
    (input?: UseAddressesInput | undefined): import("swr").responseInterface<AddressesResponse | null, import("../commerce/utils/errors").CommerceError>;
    extend: typeof extendHook;
};
declare const _default: {
    (input?: UseAddressesInput | undefined): import("swr").responseInterface<AddressesResponse | null, import("../commerce/utils/errors").CommerceError>;
    extend: typeof extendHook;
};
export default _default;
